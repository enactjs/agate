// Tooltip.module.less
//
@import "../styles/variables.less";
@import "../styles/mixins.less";
@import "../styles/skin.less";

.tail (@origin, @rotate, @skewX, @skewY) {
	left: 0;
	transform-origin: @origin;
	transform: rotate(@rotate) skew(@skewX, @skewY);
}

.centerTail (@origin, @rotate, @skew) {
	transform-origin: @origin;
	transform: rotate(@rotate) skew(@skew, @skew);
}

.tooltip {
	position: absolute;
	z-index: 1;
	pointer-events: none;
	.applySkins({
		// You'll notice tiny adjustments to the position: 0.5px, 3px, etc. in the following code.
		// These are to account for sub-pixel rendering on scaled or "imperfect" rendering scenarios
		// where hairline gaps can be seen between the tail and the body.

		.tooltipArrow {
			position: absolute;
			width: @agate-tooltip-point-width;
			height: @agate-tooltip-point-height;
			z-index: 1;

			&::after {
				content: "";
				position: absolute;
				width: 100%;
				height: 100%;
			}
		}
		&.rightArrow,
		&.leftArrow {
			.tooltipArrow {
				width: @agate-tooltip-point-width;
				height: @agate-tooltip-point-height;
			}
		}
		&.centerArrow .tooltipArrow {
			width: @agate-tooltip-point-width;
			height: @agate-tooltip-point-height;
			left: 50%;
		}
		&.middleArrow .tooltipArrow {
			width: @agate-tooltip-point-width;
			height: @agate-tooltip-point-height;
			top: 50%;
		}

		.tooltipLabel {
			--agate-tooltip-label-width: auto;

			font-size: @agate-tooltip-label-font-size;
			font-weight: @agate-tooltip-label-font-weight;
			line-height: @agate-tooltip-label-height;
			white-space: nowrap;
			width: var(--agate-tooltip-label-width); // assign a width if necessary, but without a width, "auto" is just fine.
			padding: @agate-tooltip-padding;
			border-radius: @agate-tooltip-border-radius;

			.enact-locale-rtl({
				text-align: right;
			});

			&.marquee {
				max-width: var(--sand-tooltip-label-width,  @agate-tooltip-marquee-width); // If using a marquee, use the preferred width, and if none is provided, fall back to our default variable.
			}

			&.multi {
				white-space: normal;
				.locale-japanese-line-break();
			}
		}

		// Positioning for the arrow and label
		&.below {
			.tooltipArrow {
				top: (@agate-tooltip-offset + 3px);
			}

			.tooltipLabel {
				margin-top: (@agate-tooltip-point-height + @agate-tooltip-offset);
			}

			&.leftArrow {
				.tooltipArrow {
					right: 0;
					overflow: hidden;

					&::after {
						.tail(top right; -45deg; -45deg; -5deg);
					}
				}

				.tooltipLabel {
					text-align: right;
					border-top-right-radius: 0;
				}
			}

			&.centerArrow {
				.tooltipArrow {
					left: 50%;

					&::after {
						.centerTail(top left; 45deg; 5deg);
					}
				}
			}

			&.rightArrow {
				.tooltipArrow {
					left: 0;
					overflow: hidden;

					&::after {
						.tail(top left; 45deg; 45deg; 5deg);
					}
				}

				.tooltipLabel {
					border-top-left-radius: 0;
				}
			}
		}

		&.above {
			.tooltipArrow {
				bottom: (@agate-tooltip-offset + 3px);
			}

			.tooltipLabel {
				margin-bottom: (@agate-tooltip-point-height + @agate-tooltip-offset);
			}

			&.leftArrow {
				.tooltipArrow {
					right: 0;
					overflow: hidden;

					&::after {
						.tail(bottom right; 45deg; 45deg; 5deg);
					}
				}

				.tooltipLabel {
					text-align: right;
					border-bottom-right-radius: 0;
				}
			}

			&.centerArrow {
				.tooltipArrow::after {
					.centerTail(bottom left; -45deg; -5deg);
				}
			}

			&.rightArrow {
				.tooltipArrow {
					left: 0;
					overflow: hidden;

					&::after {
						.tail(bottom left; -45deg; -45deg; -5deg);
					}
				}

				.tooltipLabel {
					border-bottom-left-radius: 0;
				}
			}
		}

		&.left {
			.tooltipArrow {
				right: (@agate-tooltip-offset + 3px);
			}

			.tooltipLabel {
				margin-right: (@agate-tooltip-point-width + 3px);
			}

			&.topArrow {
				.tooltipArrow {
					bottom: 0;
					overflow: hidden;

					&::after {
						.tail(bottom right; -45deg; 5deg; 45deg);
					}
				}

				.tooltipLabel {
					border-bottom-right-radius: 0;
				}
			}

			&.middleArrow {
				.tooltipArrow::after {
					.centerTail(top right; 45deg; -5deg);
				}
			}

			&.bottomArrow {
				.tooltipArrow {
					overflow: hidden;

					&::after {
						.tail(top right; 45deg; 5deg; -45deg);
					}
				}

				.tooltipLabel {
					border-top-right-radius: 0;
				}
			}
		}

		&.right {
			.tooltipArrow {
				left: (@agate-tooltip-offset + 3px);
			}

			.tooltipLabel {
				margin-left: (@agate-tooltip-point-height + @agate-tooltip-offset);
			}

			&.topArrow {
				.tooltipArrow {
					bottom: 0;
					overflow: hidden;

					&::after {
						.tail(bottom left; 45deg; -5deg; -45deg);
					}
				}

				.tooltipLabel {
					border-bottom-left-radius: 0;
				}
			}

			&.middleArrow {
				.tooltipArrow::after {
					.centerTail(top left; -45deg; 5deg);
				}
			}

			&.bottomArrow {
				.tooltipArrow {
					overflow: hidden;

					&::after {
						.tail(top left; -45deg; 5deg; 45deg);
					}
				}

				.tooltipLabel {
					border-top-left-radius: 0;
				}
			}
		}

		// Absolute positioning mode - anchor position rules
		&.absolute {
			width: 0;
			height: 0;
			top: var(--tooltip-position-top);
			left: var(--tooltip-position-left);

			.tooltipAnchor {
				position: absolute;
			}

			&.below {
				top: ~"calc(var(--tooltip-position-top) + " @agate-tooltip-offset ~")";

				&.leftArrow .tooltipAnchor {
					transform: translateX(-100%);
				}

				&.centerArrow .tooltipAnchor {
					transform: translateX(-50%);
				}

				&.rightArrow .tooltipAnchor { /* transform: translate(0, 0); */
				}
			}

			&.above {
				top: ~"calc(var(--tooltip-position-top) - " @agate-tooltip-offset ~")";

				&.leftArrow .tooltipAnchor {
					transform: translate(-100%, -100%);
				}

				&.centerArrow .tooltipAnchor {
					transform: translate(-50%, -100%);
				}

				&.rightArrow .tooltipAnchor {
					transform: translate(0, -100%);
				}
			}

			&.left {
				left: ~"calc(var(--tooltip-position-left) - " @agate-tooltip-offset ~")";

				&.topArrow .tooltipAnchor {
					transform: translate(-100%, -100%);
				}

				&.middleArrow .tooltipAnchor {
					transform: translate(-100%, -50%);
				}

				&.bottomArrow .tooltipAnchor {
					transform: translate(-100%, 0);
				}
			}

			&.right {
				left: ~"calc(var(--tooltip-position-left) + " @agate-tooltip-offset ~")";

				&.topArrow .tooltipAnchor {
					transform: translate(0, -100%);
				}

				&.middleArrow .tooltipAnchor {
					transform: translate(0, -50%);
				}

				&.bottomArrow .tooltipAnchor {
					/* transform: translate(0, 0); */
				}
			}
		}

		// Relative positioning mode - position rules
		&.relative {
			&.below {
				top: ~"calc(100% + " @agate-tooltip-offset ~")";

				&.transparent {
					top: ~"calc(100% + " @agate-tooltip-offset ~")";
				}

				&.leftArrow {
					right: 50%;
				}

				&.centerArrow,
				&.rightArrow {
					left: 50%;
				}

				&.centerArrow {
					transform: translateX(-50%);
				}
			}

			&.above {
				bottom: ~"calc(100% + " @agate-tooltip-offset ~")";

				&.transparent {
					bottom: ~"calc(100% + " @agate-tooltip-offset ~")";
				}

				&.leftArrow {
					right: 50%;
				}

				&.centerArrow,
				&.rightArrow {
					left: 50%;
				}

				&.centerArrow {
					transform: translateX(-50%);
				}
			}

			&.left {
				right: ~"calc(100% + " @agate-tooltip-offset ~")";

				&.transparent {
					right: ~"calc(100% + " @agate-tooltip-offset ~")";
				}

				&.topArrow {
					bottom: 50%;
				}

				&.middleArrow,
				&.bottomArrow {
					top: 50%;
				}

				&.middleArrow {
					transform: translateY(-50%);
				}
			}

			&.right {
				left: ~"calc(100% + " @agate-tooltip-offset ~")";

				&.transparent {
					left: ~"calc(100% + " @agate-tooltip-offset ~")";
				}

				&.topArrow {
					bottom: 50%;
				}

				&.middleArrow,
				&.bottomArrow {
					top: 50%;
				}

				&.middleArrow {
					transform: translateY(-50%);
				}
			}
		}

		.enact-locale-rtl({
			direction: ltr;

			.tooltipAnchor {
				direction: rtl;
			}
		});

		.tooltipArrow::after {
			background: @agate-tooltip-bg-color;
		}

		.tooltipLabel {
			color: @agate-tooltip-text-color;
			background-color: @agate-tooltip-bg-color;
		}
	});
}
