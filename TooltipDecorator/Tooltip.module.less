// Tooltip.module.less
//
@import "../styles/variables.less";
@import "../styles/mixins.less";
@import "../styles/skin.less";


.tail (@edge, @point) {
	background-image: linear-gradient(to @edge, @agate-tooltip-border-color @agate-tooltip-border-width, transparent @agate-tooltip-border-width), // Edge line
	linear-gradient(to @point @edge, @agate-tooltip-bg-color 50%, @agate-tooltip-border-color 50%, @agate-tooltip-border-color ~"calc(50% + 1px)", transparent ~"calc(50% + 1px)"); // Diagonal line + fill
}

.centerTail (@edge, @point) {
	background-image: linear-gradient(to @point @edge, @agate-tooltip-bg-color 50%, @agate-tooltip-border-color 50%, @agate-tooltip-border-color ~"calc(50% + 1px)", transparent ~"calc(50% + 1px)"); // Diagonal line + fill
}

.tooltip {
	position: absolute;
	z-index: 1;
	.applySkins({
		// You'll notice tiny adjustments to the position: 0.5px, 1px, 4px, etc. in the following code.
		// These are to account for sub-pixel rendering on scaled or "imperfect" rendering scenarios
		// where hairline gaps can be seen between the tail and the body.

		.tooltipArrow {
			position: absolute;
			width: @agate-tooltip-point-width;
			height: @agate-tooltip-point-height;
			z-index: 1;
		}

		&.rightArrow,
		&.leftArrow {
			.tooltipArrow {
				width: @agate-tooltip-point-height;
				height: 12px;
			}
		}

		&.centerArrow,
		&.middleArrow {
			.tooltipArrow::after {
				content: "";
				position: absolute;
				width: 100%;
				height: 100%;
			}
		}

		&.centerArrow .tooltipArrow {
			width: ((@agate-tooltip-point-height / 2) + 3px);
			height: @agate-tooltip-point-width;
			left: 50%;

			&::after {
				right: ((@agate-tooltip-point-height / 2) + 1px);
			}
		}

		&.middleArrow .tooltipArrow {
			width: @agate-tooltip-point-width;
			height: ((@agate-tooltip-point-height / 2) + 2px);
			top: 50%;

			&::after {
				bottom: 99%;
				left: 0;
			}
		}

		.tooltipLabel {
			--agate-tooltip-label-width: auto;

			font-size: @agate-tooltip-label-font-size;
			font-weight: @agate-tooltip-label-font-weight;
			line-height: @agate-tooltip-label-height;
			white-space: nowrap;
			width: var(--agate-tooltip-label-width); // assign a width if necessary, but without a width, "auto" is just fine.
			padding: @agate-tooltip-padding;
			border-radius: @agate-tooltip-border-radius;

			.enact-locale-rtl({
				text-align: right;
			});

			&.marquee {
				max-width: var(--agate-tooltip-label-width, @agate-tooltip-marquee-width); // If using a marquee, use the preferred width, and if none is provided, fall back to our default variable.
			}

			&.multi {
				white-space: normal;
				.locale-japanese-line-break();
			}
		}

		// Positioning for the arrow and label
		&.below {
			.tooltipArrow {
				top: (1px + @agate-tooltip-offset);
			}

			.tooltipLabel {
				margin-top: (@agate-tooltip-point-height + @agate-tooltip-offset);
			}

			&.leftArrow {
				.tooltipArrow {
					right: 0;
				}

				.tooltipLabel {
					text-align: right;
					border-top-right-radius: 0;
				}
			}

			&.centerArrow {
				.tooltipArrow {
					left: 50%;
				}
			}

			&.rightArrow {
				.tooltipArrow {
					left: 0;
				}

				.tooltipLabel {
					border-top-left-radius: 0;
				}
			}
		}

		&.above {
			.tooltipArrow {
				bottom: (1.5px + @agate-tooltip-offset);
			}

			.tooltipLabel {
				margin-bottom: (@agate-tooltip-point-height + @agate-tooltip-offset);
			}

			&.leftArrow {
				.tooltipArrow {
					right: 0;
				}

				.tooltipLabel {
					text-align: right;
					border-bottom-right-radius: 0;
				}
			}

			// Commented out because it isn't necessary to specify anything for this case at this time
			// but kept in the code here in case we need to in the future.
			// &.centerArrow {
			// 	.tooltipArrow {
			// 	}
			// }

			&.rightArrow {
				.tooltipArrow {
					left: 0;
				}

				.tooltipLabel {
					border-bottom-left-radius: 0;
				}
			}
		}

		&.left {
			.tooltipArrow {
				right: (1px + @agate-tooltip-offset);
			}

			.tooltipLabel {
				margin-right: (@agate-tooltip-point-width + @agate-tooltip-offset);
			}

			&.topArrow {
				.tooltipArrow {
					bottom: 0;
				}

				.tooltipLabel {
					border-bottom-right-radius: 0;
				}
			}

			&.middleArrow {
				.tooltipArrow {
					right: (1.5px + @agate-tooltip-offset);
				}
			}

			&.bottomArrow {
				.tooltipLabel {
					border-top-right-radius: 0;
				}
			}
		}

		&.right {
			.tooltipArrow {
				left: (1px + @agate-tooltip-offset);
			}

			.tooltipLabel {
				margin-left: (@agate-tooltip-point-width + @agate-tooltip-offset);
			}

			&.topArrow {
				.tooltipArrow {
					bottom: 0;
				}

				.tooltipLabel {
					border-bottom-left-radius: 0;
				}
			}

			&.middleArrow {
				.tooltipArrow {
					left: (1.5px + @agate-tooltip-offset);
				}
			}

			&.bottomArrow {
				.tooltipLabel {
					border-top-left-radius: 0;
				}
			}
		}

		// Absolute positioning mode - anchor position rules
		&.absolute {
			width: 0;
			height: 0;

			.tooltipAnchor {
				position: absolute;
			}

			&.below {
				&.leftArrow .tooltipAnchor {
					transform: translateX(-100%);
				}

				&.centerArrow .tooltipAnchor {
					transform: translateX(-50%);
				}

				&.rightArrow .tooltipAnchor { /* transform: translate(0, 0); */
				}
			}

			&.above {
				&.leftArrow .tooltipAnchor {
					transform: translate(-100%, -100%);
				}

				&.centerArrow .tooltipAnchor {
					transform: translate(-50%, -100%);
				}

				&.rightArrow .tooltipAnchor {
					transform: translate(0, -100%);
				}
			}

			&.left {
				&.topArrow .tooltipAnchor {
					transform: translate(-100%, -100%);
				}

				&.middleArrow .tooltipAnchor {
					transform: translate(-100%, -50%);
				}

				&.bottomArrow .tooltipAnchor {
					transform: translate(-100%, 0);
				}
			}

			&.right {
				&.topArrow .tooltipAnchor {
					transform: translate(0, -100%);
				}

				&.middleArrow .tooltipAnchor {
					transform: translate(0, -50%);
				}

				&.bottomArrow .tooltipAnchor { /* transform: translate(0, 0); */
				}
			}
		}

		// Relative positioning mode - position rules
		&.relative {
			&.below {
				top: 100%;

				&.leftArrow {
					right: 50%;
				}

				&.centerArrow,
				&.rightArrow {
					left: 50%;
				}

				&.centerArrow {
					transform: translateX(-50%);
				}
			}

			&.above {
				bottom: 100%;

				&.leftArrow {
					right: 50%;
				}

				&.centerArrow,
				&.rightArrow {
					left: 50%;
				}

				&.centerArrow {
					transform: translateX(-50%);
				}
			}

			&.left {
				right: 100%;

				&.topArrow {
					bottom: 50%;
				}

				&.middleArrow,
				&.bottomArrow {
					top: 50%;
				}

				&.middleArrow {
					transform: translateY(-50%);
				}
			}

			&.right {
				left: 100%;

				&.topArrow {
					bottom: 50%;
				}

				&.middleArrow,
				&.bottomArrow {
					top: 50%;
				}

				&.middleArrow {
					transform: translateY(-50%);
				}
			}
		}

		:global(.enact-locale-right-to-left) & {
			direction: ltr;

			.tooltipAnchor {
				direction: rtl;
			}
		}

		// Drawing the arc/arrow shape using the mixin from above
		&.below {
			&.leftArrow {
				.tooltipArrow {
					.tail(left; top);
				}
			}

			&.centerArrow {
				.tooltipArrow {
					.centerTail(right; top);
				}

				.tooltipArrow::after {
					.centerTail(left; top);
				}
			}

			&.rightArrow {
				.tooltipArrow {
					.tail(right; top);
				}
			}
		}

		&.above {
			&.leftArrow {
				.tooltipArrow {
					.tail(left; bottom);
				}
			}

			&.centerArrow {
				.tooltipArrow {
					.centerTail(right; bottom);
				}

				.tooltipArrow::after {
					.centerTail(left; bottom);
				}
			}

			&.rightArrow {
				.tooltipArrow {
					.tail(right; bottom);
				}
			}
		}

		&.left {
			&.topArrow {
				.tooltipArrow {
					.tail(top; right);
				}
			}

			&.middleArrow {
				.tooltipArrow {
					.centerTail(right; bottom);
				}

				.tooltipArrow::after {
					.centerTail(right; top);
				}
			}

			&.bottomArrow {
				.tooltipArrow {
					.tail(bottom; right);
				}
			}
		}

		&.right {
			&.topArrow {
				.tooltipArrow {
					.tail(top; left);
				}
			}

			&.middleArrow {
				.tooltipArrow {
					.centerTail(left; bottom);
				}

				.tooltipArrow::after {
					.centerTail(left; top);
				}
			}

			&.bottomArrow {
				.tooltipArrow {
					.tail(bottom; left);
				}
			}
		}

		.tooltipLabel {
			color: @agate-tooltip-text-color;
			background-color: @agate-tooltip-bg-color;
			border: @agate-tooltip-border-width solid @agate-tooltip-border-color;
		}
	});
}
