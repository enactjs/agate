// LabeledIconButton.module.less
//

@import "../styles/mixins.less";
@import '../styles/skin.less';

// This refers to the LabeledIcon styling, since they're the same.
@import '../LabeledIcon/LabeledIcon.module.less';

.labeledIconButton {
	&.icon,
	&.label,
	&.selected,
	&.small {
		/* Public Class Names */
	}

	.label {
		text-overflow: ellipsis;
		overflow: hidden;
		width: 100%;
		white-space: nowrap;
	}

	.applySkins({
		//max-width: @agate-labelediconbutton-max-width;

		&.labeledIcon {
			padding-bottom: @agate-labelediconbutton-padding-bottom;
		}

		&.smallest {
			max-width: @agate-labelediconbutton-smallest-max-width;
			min-width: @agate-labelediconbutton-smallest-min-width;
			//padding-bottom: 0;//to overwrite LabeledIcon styles


			.label {
				font-size: @agate-labelediconbutton-smallest-label-font-size;
				line-height: @agate-labelediconbutton-smallest-label-height;
				height: @agate-labelediconbutton-smallest-label-height;
			}
		}

		&.small {
			max-width: @agate-labelediconbutton-small-max-width;
			min-width: @agate-labelediconbutton-small-min-width;

			.label {
				font-size: @agate-labelediconbutton-small-label-font-size;
				line-height: @agate-labelediconbutton-small-label-height;
				height: @agate-labelediconbutton-small-label-height;
			}
		}

		&.large {
			max-width: @agate-labelediconbutton-large-max-width;
			min-width: @agate-labelediconbutton-large-min-width;

			.label {
				font-size: @agate-labelediconbutton-large-label-font-size;
				line-height: @agate-labelediconbutton-large-label-height;
				height: @agate-labelediconbutton-large-label-height;
			}
		}

		&.huge {
			max-width: @agate-labelediconbutton-large-max-width;
			min-width: @agate-labelediconbutton-large-min-width;

			.label {
				font-size: @agate-labelediconbutton-huge-label-font-size;
				line-height: @agate-labelediconbutton-huge-label-height;
				height: @agate-labelediconbutton-huge-label-height;
			}
		}

		//label margin top based on labelPosition
		&.below {
			&.smallest {
				.label {
					margin: @agate-labelediconbutton-below-smallest-label-margin;
				}
			}

			&.small {
				.label {
					margin: @agate-labelediconbutton-below-small-label-margin;
				}
			}

			&.large {
				.label {
					margin: @agate-labelediconbutton-below-large-label-margin;
				}
			}

			&.huge {
				.label {
					margin: @agate-labelediconbutton-below-huge-label-margin;
				}
			}
		}

		&.above {
			&.smallest {
				.label {
					margin: @agate-labelediconbutton-above-smallest-label-margin;
				}
			}

			&.small {
				.label {
					margin: @agate-labelediconbutton-above-small-label-margin;
				}
			}

			&.large {
				.label {
					margin: @agate-labelediconbutton-above-large-label-margin;
				}
			}

			&.huge {
				.label {
					margin: @agate-labelediconbutton-above-huge-label-margin;
				}
			}

			.noChildren {

			}
		}

		&.after, &.right {
			&.smallest {
				.label {
					margin: @agate-labelediconbutton-right-smallest-label-margin;
				}
			}

			&.small {
				.label {
					margin: @agate-labelediconbutton-right-small-label-margin;
				}
			}

			&.large {
				.label {
					margin: @agate-labelediconbutton-right-large-label-margin;
				}
			}

			&.huge {
				.label {
					margin: @agate-labelediconbutton-right-huge-label-margin;
				}
			}
		}

		&.before, &.left {
			&.smallest {
				.label {
					margin: @agate-labelediconbutton-left-smallest-label-margin;
				}
			}

			&.small {
				.label {
					margin: @agate-labelediconbutton-left-small-label-margin;
				}
			}

			&.large {
				.label {
					margin: @agate-labelediconbutton-left-large-label-margin;
				}
			}

			&.huge {
				.label {
					margin: @agate-labelediconbutton-left-huge-label-margin;
				}
			}

			.noChildren {

			}
		}

		.label {
			margin-top: @agate-labelediconbutton-label-margin;
			color: @agate-labelediconbutton-label-color;
			font-size: @agate-labelediconbutton-label-font-size;
			font-weight: @agate-labelediconbutton-label-font-weight;
		}

		.focus({
			background: transparent;

			.label {
				color: @agate-labelediconbutton-label-focus-color;
			}
		});

		.disabled({
			.vendor-opacity(@agate-disabled-opacity);

			cursor: default;

			// Disabled children of disabled components
			.disabled({
				.vendor-opacity(1);
			}, parent);
		});
	});
}

.labeledIcon {
	.applySkins({
		&.smallest {
			.icon {
				font-size: @agate-labelediconbutton-smallest-icon-font-size;
			}
		}
		&.small {
			.icon {
				font-size: @agate-labelediconbutton-small-icon-font-size;
			}
		}
		&.large {
			.icon {
				font-size: @agate-labelediconbutton-large-icon-font-size;
			}
		}
		&.huge {
			.icon {
				font-size: @agate-labelediconbutton-huge-icon-font-size;
			}
		}

		&.smallest,
		&.small,
		&.large,
		&.huge {
			&.left, 
			&.right, 
			&.before, 
			&.after {
				.button {
					padding: 0;
				}

				.client .icon {
					padding: 0;
				}
			}
		}

		.opaque {
			.bg {
				background-color: #333333;
			}
		}

		.lightOpaque {
			.bg {
				background-color: #ffffff;
			}
		}

		.button {
			width: 300px;
			height: 80px;
			border: double 4px transparent;
			border-radius: 80px;
			//background-image: linear-gradient(white, white), radial-gradient(circle at top left, #f00,#3020ff);
			background-image: @agate-gradient, radial-gradient(circle at top left, #f00,#3020ff);
			background-origin: border-box;
			background-clip: content-box, border-box;
			//background-clip: padding-box, border-box;
			padding: 10px;


			//background-clip: padding-box;
			//border: solid @agate-labelediconbutton-button-border transparent;
			//border-radius: 1em;
			//
			//&:before {
			//	content: '';
			//	position: absolute;
			//	top: 0;
			//	right: 0;
			//	bottom: 0;
			//	left: 0;
			//	z-index: -1;
			//	margin: -@agate-labelediconbutton-button-border;
			//	border-radius: inherit;
			//	background: @agate-gradient;
			//}
		}

		.focus({

			.label {
				color: @agate-labelediconbutton-label-focus-color;
			}
		});

		.button {
			&.selected {
				outline: 4px solid orange;

			}
		}
	})
}