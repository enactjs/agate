// Item.module.less
//
@import "../styles/mixins.less";
@import "../styles/skin.less";

.item {
	// Item's display is override Layout so forcing it back here'
	display: flex;
	position: relative;

	.itemContent {
		&.hasLabel {
			&.labelAfter,
			&.labelBelow {
				.content { order: 1; }
				.label   { order: 2; }
			}

			&.labelAbove,
			&.labelBefore {
				.content { order: 2; }
				.label   { order: 1; }
			}

			&.labelBefore .label {
				// temp static values
				.padding-start-end(0, 8px);
			}

			&.labelAfter .label {
				// temp static values
				.padding-start-end(8px, 0);
			}

			.content {
				box-sizing: border-box;
				// when showing content and label inline, favor contentt
				// this should be a variable
				min-width: 60%;
			}

			.label {
				box-sizing: border-box;
				// this should be a variable
				max-width: 40%;
			}
		}
	}

	.slotAfter {
		display: flex;
		justify-content: center;
	}

	.slotBefore {
		display: flex;
		justify-content: center;
	}

	.applySkins({
		.agate-item-sizing();

		line-height: @agate-item-line-height;
		color: @agate-item-color;

		.itemContent {
			.label   {
				color: @agate-item-label-color;
				font-size: @agate-item-label-font-size;
			}
		}

		&.inline {
			max-width: 240px;

			.itemContent {
				width: unset;

				&.labelAbove,
				&.labelBelow {
					.label   {
						max-width: unset;
					}
				}
			}

			.content {
				width: unset;
			}
		}

		.focus({
			background-color: @agate-item-focus-bg-color;
			color: @agate-item-focus-color;

			.itemContent {
				.label   {
					color: @agate-item-focus-color;
				}
			}
		});
	});
}
