// Item.module.less
//
@import "../styles/mixins.less";
@import "../styles/skin.less";

.item {
	// Item's display is override Layout so forcing it back here'
	display: flex;
	position: relative;

	&.hasLabel {
		.itemContent {
			&.labelAfter,
			&.labelBelow {
				.content { order: 1; }
				.label   { order: 2; }
			}

			&.labelAbove,
			&.labelBefore {
				.content { order: 2; }
				.label   { order: 1; }
			}
		}
	}

	.slotAfter,
	.slotBefore {
		line-height: 0;  // Attempt to get the children of this to always vertically-align their middles with the text

		> * {
			// vertically align all direct children
			vertical-align: middle;

			// Remove the specific edge margin on direct children so the slot can define the proper
			// spacing for itself.
			&:first-child {
				margin-inline-start: 0;
			}
			&:last-child {
				margin-inline-end: 0;
			}
		}
	}

	.applySkins({
		.agate-item-sizing();

		width: @agate-item-width;
		height: @agate-item-height;
		line-height: @agate-item-line-height;
		border-style: solid;
		border-width: @agate-item-border-width;
		border-color: @agate-item-border-color;
		color: @agate-item-color;
		background-color: @agate-item-bg-color;

		&.hasLabel {
			.itemContent {
				line-height: @agate-item-itemcontent-line-height;
				padding: @agate-item-haslabel-padding;

				&.labelBefore .label {
					.padding-start-end(0, @agate-item-label-padding);
				}

				&.labelAfter .label {
					.padding-start-end(@agate-item-label-padding, 0);
				}
			}
		}

		&:not(.centered) {
			.labelAfter,
			.labelBefore {
				.content {
					box-sizing: border-box;
					min-width: @agate-item-content-width;
				}

				.label {
					box-sizing: border-box;
					max-width: @agate-item-label-max-width;
				}
			}
		}

		.label {
			color: @agate-item-label-color;
			font-size: @agate-item-label-font-size;
			line-height: @agate-item-label-line-height;
		}

		.slotAfter {
			font-size: @agate-item-sub-text-size;
			margin-inline-start: @agate-item-slotafter-spacing;
		}

		.slotBefore {
			margin-inline-end: @agate-item-slotbefore-spacing;
		}

		&.selected {
			color: @agate-item-selected-color;
		}

		&.inline {
			// overriding ui/Item's inline-block
			display: inline-flex;
			max-width: @agate-item-inline-max-width;

			.itemContent {
				width: @agate-item-inline-content-width;
			}

			.itemContent,
			.content {
				flex-shrink: 1;
				overflow: auto;
			}

			&.hasLabel {
				.slotAfter {
					.padding-start-end(@agate-item-slotafter-padding-left, 0);
				}
			}
		}

		&.centered {
			.itemContent {
				max-width: fit-content;
			}

			&.inline {
				max-width: @agate-item-inline-max-width;
			}
		}

		&.large { /* Needed to prevent global class being added in the DOM */ }

		// TODO: needs to be modified when new requirements for small item is available
		&.small {
			font-size: @agate-item-small-font-size;
			line-height: @agate-item-small-line-height;

			&.hasLabel {
				.itemContent {
					padding: @agate-item-small-haslabel-padding;
				}
			}

			.itemContent {
				line-height: @agate-item-small-itemcontent-line-height;

				.label {
					font-size: @agate-item-small-label-font-size;
				}
			}
		}

		.focus({
			border-color: @agate-item-focus-border-color;
			background-color: @agate-item-focus-bg-color;
			background-image: @agate-item-focus-bg-image;
			color: @agate-item-focus-color;

			.itemContent {
				.label {
					color: @agate-item-label-color;
				}
			}
		});

		&.selected {
			background-color: @agate-item-selected-bg-color;
			border-color: @agate-item-selected-border-color;
			color: @agate-item-focus-color;

			&::before {
				content: "";
				height: @agate-indicator-height;
				width: @agate-indicator-height;
				background-color: @agate-indicator-bg-color;
				border-radius: @agate-indicator-border-radius;
				align-self: @agate-indicator-align-self;
				margin-right: @agate-indicator-margin-right;
			}

			.itemContent {
				.label {
					color: @agate-item-selected-label-color;
				}
			}

			// Selected+Focus colors use both sets of colors
			.focus({
				border-color: @agate-item-selected-border-color;
				background-color: @agate-item-focus-bg-color;
				color: @agate-item-focus-color;

				.itemContent {
					.label {
						color: @agate-item-focus-color;
					}
				}
			});
		}
	});
}
