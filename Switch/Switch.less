// Switch.less
//
@import "../styles/mixins.less";
@import "../styles/variables.less";
@import "../styles/skin.less";

@agate-switch-height: 20px;
@agate-switch-width: 80px;
// Interally theme our implementation using published classes from ToggleItem and ToggleIcon
.toggleIcon {
	border-radius: (@agate-switch-height / 2);
	width: @agate-switch-width;
	height: @agate-switch-height;
	line-height: @agate-switch-height;
	font-family: "Moonstone Icons";
	position: relative;
	display: inline-block;
	text-align: left;
	cursor: default;

	.icon {
		visibility: visible;
		left: 0;
		width: @agate-switch-height;
		height: inherit;
		font-size: (@agate-switch-height * 2.8);
		line-height: inherit;
		margin: 0;
	}

	&.selected {
		.icon {
			left: (@agate-switch-width - @agate-switch-height);
		}
	}

	&.animated {
		-webkit-transition: background-color 0.2s;
		transition: background-color 0.2s;

		.icon {
			-webkit-transition: left 0.2s, color 0.2s;
			transition: left 0.2s, color 0.2s;
		}
	}

	// Skin colors
	.applySkins({
		background-color: @agate-foreground;

		.icon {
			background-color: transparent;
			color: @agate-switch-color;
		}

		&.selected {
			background-color: @agate-switch-selected-bg-color;

			.icon {
				color: @agate-switch-selected-color;

				:global(.spottable):focus & {
					color: @agate-switch-selected-color;
				}
			}
			:global(.spottable):focus & {
				background-color: @agate-text-color;
			}
		}

		.disabled({
			background-color: @agate-foreground;

			.icon {
				color: @agate-switch-color;
			}
		});

		.focus({
			.toggleIcon {
				// Skin colors
				background-color: @agate-foreground;
				

				.icon {
					color: @agate-sliderbutton-focus-color;
				}
				&.selected .icon {
					color: @agate-sliderbutton-focus-color;
				}
			
			}
		})
	});
}

// Keep the switch handle (the icon) a constant color regardless of focus state.

