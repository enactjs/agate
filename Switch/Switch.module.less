// Switch.module.less
//
@import "../styles/mixins.less";
@import "../styles/skin.less";

// Interally theme our implementation using published classes from ToggleItem and ToggleIcon
.toggleIcon {
	.applySkins({
		background-color: @agate-switch-bg-color;
		border-radius: @agate-switch-border-radius;
		width: @agate-switch-width;
		height: @agate-switch-height;
		line-height: @agate-switch-height;
		font-family: "Agate Icons";
		position: relative;
		display: inline-block;
		text-align: left;
		cursor: default;

		.icon {
			background-color: transparent;
			color: @agate-switch-color;
			visibility: visible;
			left: 0;
			width: @agate-switch-height;
			height: inherit;
			font-size: (@agate-switch-height * @agate-switch-icon-scale);
			line-height: inherit;
			margin: 0;
		}

		&.animated {
			-webkit-transition: background-color 0.2s;
			transition: background-color 0.2s;

			.icon {
				-webkit-transition: left 0.2s, color 0.2s;
				transition: left 0.2s, color 0.2s;
			}
		}

		&.selected {
			background-color: @agate-switch-selected-bg-color;

			.icon {
				left: (@agate-switch-width - @agate-switch-height);
				color: @agate-switch-selected-color;

				:global(.spottable):focus & {
					color: @agate-switch-selected-color;
				}
			}
			:global(.spottable):focus & {
				background-color: @agate-switch-selected-focus-bg-color;
			}
		}

		// .disabled({
		// 	background-color: @agate-foreground;

		// 	.icon {
		// 		color: @agate-switch-color;
		// 	}
		// });

		.focus({
			.toggleIcon {
				background-color: @agate-switch-focus-bg-color;

				.icon,
				&.selected .icon {
					color: @agate-sliderbutton-focus-color;
				}
			}
		})
	});
}

// Keep the switch handle (the icon) a constant color regardless of focus state.
