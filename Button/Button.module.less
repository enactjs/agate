// Button.module.less
//
@import "../styles/mixins.less";
@import "../styles/variables.less";
@import "../styles/skin.less";

// NOTE: This animation conflicts with any skin that assigns the @agate-button-bg-transform value.
// A more elaborate animation system will be required to support the combination of skin variables
// and preset values into global keyframe animations.
@keyframes scale-bounce {
	0%   { transform: scale(0); animation-timing-function: ease-out; }
	80%  { transform: scale(1.07); animation-timing-function: ease-in-out; }
	100% { transform: scale(1); }
}

.button {
	.applySkins({
		height: @agate-button-height;
		font-weight: @agate-button-font-weight;
		letter-spacing: @agate-button-letter-spacing;
		line-height: @agate-button-line-height;
		text-indent: @agate-button-text-indent;  // Keep the text centered
		font-variant-ligatures: @agate-button-font-ligatures;
		min-width: @agate-button-height;
		max-width: @agate-button-max-width;
		padding: 0 @agate-button-h-padding;
		margin: 0 @agate-component-spacing;
		box-sizing: border-box;
		font-size: @agate-button-font-size;
		vertical-align: middle;

		.bg {
			background-color: @agate-button-bg-color;
			background-origin: @agate-button-background-origin;
			border: @agate-button-border-width solid @agate-button-border-color;
			border-radius: @agate-button-border-radius;
			color: @agate-button-color;
			background-image: @agate-button-bg-image;
			box-shadow: @agate-button-shadow;
			transform: @agate-button-bg-transform;
			// backdrop-filter: blur(3px);
		}

		.client {
			padding: @agate-button-client-padding;
			color: @agate-button-color;

			.icon {
				.margin-start-end(@agate-button-icon-margin-start, @agate-button-icon-margin-end);
			}
		}

		.disabled({
			opacity: @agate-button-disabled-opacity;

			.bg {
				background-color: @agate-button-disabled-bg-color;
			}

			.focus({
				.bg {
					background-image: @agate-button-disabled-focus-bg-image;
				}

				.client {
					color: @agate-button-disabled-focus-color;
				}
			});

			&.selected {
				.bg {
					background-color: @agate-button-selected-disabled-bg-color;
					border-color: @agate-button-selected-disabled-border-color;
				}

				.focus({
					.bg {
						border-color: @agate-button-selected-disabled-focus-border-color;
					}
				})
			}

		});

		.badge {
			position: absolute;
			.position(@agate-button-badge-position);
			border-radius: @agate-button-badge-border-radius;
			padding: @agate-button-badge-padding;
			font-size: @agate-button-badge-font-size;
			line-height: @agate-button-badge-line-height;
			letter-spacing: @agate-button-badge-letter-spacing;
			text-indent: @agate-button-badge-text-indent;
			transform: @agate-button-badge-transform;
			color: @agate-button-badge-color;
			background-color: var(--agate-button-badge-bg-color, @agate-button-badge-bg-color);
			z-index: 1;

			.enact-locale-rtl({
				.position(@agate-button-badge-position-rtl);
			});
		}

		&.grid {
			.bg {
				border-radius: @agate-button-grid-border-radius;
			}
		}

		&.iconAfter {
			.client {
				flex-direction: row-reverse;
			}

			.icon {
				.margin-start-end(@agate-button-icon-position-after-margin-start, @agate-button-icon-position-after-margin-end);
			}
		}

		&.minWidth {
			min-width: @agate-button-min-width;
		}


		&.iconOnly {
			letter-spacing: @agate-button-iconOnly-letter-spacing;

			.bg {
				background-color: @agate-button-iconOnly-bg-color;
				border-color: @agate-button-iconOnly-border-color;
			}

			.client {
				color: @agate-button-iconOnly-color;
			}

			&.selected {
				.bg {
					background-color: @agate-button-iconOnly-bg-color;
					border-color: @agate-button-iconOnly-selected-border-color;
				}

				.client {
					color: @agate-button-iconOnly-color;
				}
			}

			.focus({
				.bg {
					border-color: @agate-button-iconOnly-border-color;
				}
			});

			.disabled({
				.bg {
					background-color: @agate-button-iconOnly-bg-color;
				}

				.client {
					color: @agate-button-iconOnly-disabled-color;
				}
			});

			&,
			&.huge,
			&.small,
			&.smallest {
				padding: 0;

				.client .icon {
					margin: 0;
				}

				.enact-locale-rtl({
					.client .icon {
						margin: 0;
					}
				});
			}

			&.hasIcon {
				// A Button with just an Icon and no text
				text-indent: 0;

				.bg {
					border-radius: @agate-button-icon-border-radius;
				}

				&.minWidth {
					.bg {
						border-radius: @agate-button-border-radius;
					}
				}
			}
		}

		// opaque
		&.opaque {
			/* Available for export */
		}

		&.lightOpaque {
			.bg {
				background-color: @agate-button-lightOpaque-bg-color;
			}

			.client {
				color: @agate-button-lightOpaque-color;
			}

			.disabled({
				.bg {
					background-color: @agate-button-lightOpaque-bg-color;
				}

				.client {
					color: @agate-button-lightOpaque-color;
				}
			})
		}

		&.transparent {
			.bg {
				background-color: @agate-button-transparent-bg-color;
			}

			.client {
				color: @agate-button-transparent-color;
			}

			.disabled({
				.bg {
					background-color: @agate-button-transparent-bg-color;
				}

				.client {
					color: @agate-button-transparent-color;
				}
			})
		}

		&.animateOnRender {
			.bg,
			.client,
			.badge {
				animation-fill-mode: backwards;
				animation-duration: @agate-button-animation-duration;
				animation-name: scale-bounce;
			}

			.bg {
				animation-delay: calc(var(--agate-button-animation-delay, 0) * 1ms);
			}

			.client {
				animation-delay: calc(var(--agate-button-animation-delay, 0) * 1ms + @agate-button-client-animation-offset);
			}

			.badge {
				animation-delay: calc(var(--agate-button-animation-delay, 0) * 1ms + @agate-button-badge-animation-offset);
			}
		}

		&.joinedLeft,
		&.joinedCenter {
			margin-right: 0;

			.bg {
				border-top-right-radius: 0;
				border-bottom-right-radius: 0;
			}
		}

		&.joinedRight,
		&.joinedCenter {
			margin-left: 0;

			.bg {
				border-top-left-radius: 0;
				border-bottom-left-radius: 0;
			}
		}

		&.huge {
			height: @agate-button-huge-height;
			max-width: @agate-button-huge-max-width;
			min-width: @agate-button-huge-height;
			line-height: @agate-button-huge-line-height;
			font-size: @agate-button-huge-font-size;
			padding: 0 @agate-button-huge-h-padding;

			.bg {
				border-width: @agate-button-huge-border-width;
			}

			.client {
				.icon {
					.margin-start-end(@agate-button-huge-icon-margin-start, @agate-button-huge-icon-margin-end);
				}
			}

			&.iconAfter {
				.icon {
					.margin-start-end(@agate-button-huge-icon-position-after-margin-start, @agate-button-huge-icon-position-after-margin-end);
				}
			}

			&.minWidth {
				min-width: @agate-button-huge-min-width;
			}
		}

		&.small {
			border-radius: @agate-button-small-border-radius;
			height: @agate-button-small-height;
			max-width: @agate-button-small-max-width;
			min-width: @agate-button-small-height;
			font-size: @agate-button-small-font-size;
			line-height: @agate-button-line-height;
			padding: 0 @agate-button-small-h-padding;

			.client {
				::before {
					bottom: 12px;
					left: 18px;
					right: 18px;
				}

				.icon {
					.margin-start-end(@agate-button-small-icon-margin-start, @agate-button-small-icon-margin-end);
				}
			}

			&.iconAfter {
				.icon {
					.margin-start-end(@agate-button-small-icon-position-after-margin-start, @agate-button-small-icon-position-after-margin-end);
				}
			}

			&.minWidth {
				min-width: @agate-button-small-min-width;
			}

			.badge {
				.position(@agate-button-small-badge-position);
				border-radius: @agate-button-small-badge-border-radius;
				padding: @agate-button-small-badge-padding;
				font-size: @agate-button-small-badge-font-size;
				line-height: @agate-button-small-badge-line-height;
				letter-spacing: @agate-button-small-badge-letter-spacing;
				text-indent: @agate-button-small-badge-text-indent;
				transform: @agate-button-small-badge-transform;

				.enact-locale-rtl({
					.position(@agate-button-small-badge-position-rtl);
				});
			}
		}

		&.smallest {
			border-radius: @agate-button-smallest-border-radius;
			height: @agate-button-smallest-height;
			max-width: @agate-button-smallest-max-width;
			min-width: @agate-button-smallest-height;
			line-height: @agate-button-smallest-line-height;
			font-size: @agate-button-smallest-font-size;
			padding: 0 @agate-button-smallest-h-padding;

			.client {
				.icon {
					.margin-start-end(@agate-button-smallest-icon-margin-start, @agate-button-smallest-icon-margin-end);
				}
			}

			&.iconAfter {
				.icon {
					.margin-start-end(@agate-button-smallest-icon-position-after-margin-start, @agate-button-smallest-icon-position-after-margin-end);
				}
			}

			.badge {
				.position(@agate-button-smallest-badge-position);
				border-radius: @agate-button-smallest-badge-border-radius;
				padding: @agate-button-smallest-badge-padding;
				font-size: @agate-button-smallest-badge-font-size;
				line-height: @agate-button-smallest-badge-line-height;
				letter-spacing: @agate-button-smallest-badge-letter-spacing;
				text-indent: @agate-button-smallest-badge-text-indent;
				transform: @agate-button-smallest-badge-transform;

				&.minWidth {
					min-width: @agate-button-smallest-min-width;
				}


				.enact-locale-rtl({
					.position(@agate-button-smallest-badge-position-rtl);
				});
			}
		}

		&.highlighted {
			.bg {
				background-color: @agate-button-highlighted-bg-color;
				background-image: @agate-button-highlighted-bg-image;
				opacity: @agate-button-highlighted-opacity;
			}

			&,
			.client {
				color: @agate-button-highlighted-color;
			}

			&.lightOpaque {
				.bg {
					background-color: @agate-button-lightOpaque-highlighted-bg-color;
				}

				.client {
					color: @agate-button-lightOpaque-highlighted-color;
				}
			}

			&.transparent {
				.bg {
					background-color: @agate-button-transparent-bg-color;
				}

				.client {
					color: @agate-button-transparent-highlighted-color;
				}
			}
		}

		&.selected {
			.bg {
				background-color: @agate-button-selected-bg-color;
				border-color: @agate-button-selected-border-color;
			}

			&,
			.client {
				color: @agate-button-selected-color;
			}

			&.lightOpaque {
				.bg {
					background-color: @agate-button-lightOpaque-selected-bg-color;
				}

				.client {
					color: @agate-button-lightOpaque-selected-color;
				}
			}

			&.transparent {
				.bg {
					background-color: @agate-button-transparent-bg-color;
				}

				.client {
					color: @agate-button-transparent-selected-color;
				}
			}
		}

		// override Marquee's alignment.
		.marquee {
			text-align: center;
		}

		// Flex grow the marquee text only if there is text or the button has minWidth applied. this is to prevent the descentration of the icon in case of iconOnly.
		&:not(.iconOnly), &.minWidth {
			.marquee {
				flex-grow: 1;
			}
		}

		.focus({
			background-color: transparent;
			background-image: none;

			.bg {
				background-color: @agate-button-focus-bg-color;
				background-image: @agate-button-focus-bg-image;
				border-color: @agate-button-focus-border-color;
			}

			&,
			.client {
				color: @agate-button-focus-color;
			}

			&.highlighted {
				.bg {
					opacity: 1;
				}
			}

			&.selected {
				.bg {
					border-color: @agate-button-selected-focus-border-color;
				}
			}
		});

		&:not([disabled]) {
			.active({
				.bg {
					background-color: @agate-button-active-bg-color;
					background-image: @agate-button-active-bg-image;
					border: @agate-button-border-width solid @agate-button-border-color;
				}

				&,
				.client {
					color: @agate-button-active-color;
				}

				&.highlighted {
					.bg {
						opacity: 1;
					}
				}

				.focus({
					.bg {
						background-image: @agate-button-active-focus-bg-image;
					}

					&,
					.client {
						color: @agate-button-active-focus-color;
					}
				})
			});
		}
	});
}
